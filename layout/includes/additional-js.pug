div
  script.
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.register("/sw.js", { scope: "/" }).then(reg => {
        reg.onupdatefound = () => {
          const installingWorker = reg.installing;
          installingWorker.onstatechange = () => {
            if (installingWorker.state === 'installed') {
              if (navigator.serviceWorker.controller) {
                const isSnackbar = GLOBAL_CONFIG.Snackbar !== undefined;
                isSnackbar && btf.snackbarShow("已刷新缓存，更新为最新内容");
                navigator.serviceWorker.controller.postMessage({ type: "skipWaiting" });
              } else {
                console.log("第一次注册Service Worker");
              }
            }
          };
        };
      });
      navigator.serviceWorker.addEventListener("message", event => {
        if (event.data && event.data.type === "refresh") {
          console.log("收到刷新页面请求，开始刷新页面");
          window.location.reload();
        }
      });
    }

  script(defer src="https://api.kiprotect.com/v1/privacy-managers/a630a6d64b523552ab9cfab7dd02cd39/klaro.js")

  script(src=url_for(theme.asset.utils))
  script(src=url_for(theme.asset.main))
  script(defer src="/js/custom.js")

  if theme.translate.enable
    script(src=url_for(theme.asset.translate))

  if theme.lightbox
    script(src=url_for(theme.asset[theme.lightbox]))

  if theme.instantpage
    script(src=url_for(theme.asset.instantpage), type='module')

  if theme.lazyload.enable
    script(src=url_for(theme.asset.lazyload))

  if theme.snackbar.enable
    script(src=url_for(theme.asset.snackbar))

  .js-pjax
    if needLoadCountJs
      != partial("includes/third-party/card-post-count/index", {}, { cache: true })

    if loadSubJs
      include ./third-party/subtitle.pug

    include ./third-party/math/index.pug
    include ./third-party/abcjs/index.pug

    if commentsJsLoad
      include ./third-party/comments/js.pug

  != partial("includes/third-party/prismjs", {}, { cache: true })

  if theme.aside.enable && theme.aside.card_newest_comments.enable
    if theme.pjax.enable || (!is_post() && page.aside !== false)
      != partial("includes/third-party/newest-comments/index", {}, { cache: true })

  != fragment_cache('injectBottom', function(){return injectHtml(theme.inject.bottom)})

  != partial("includes/third-party/effect", {}, { cache: true })
  != partial("includes/third-party/chat/index", {}, { cache: true })

  if theme.aplayerInject && theme.aplayerInject.enable
    if theme.pjax.enable || theme.aplayerInject.per_page || page.aplayer
      include ./third-party/aplayer.pug

  if theme.pjax.enable
    != partial("includes/third-party/pjax", {}, { cache: true })

  if theme.umami_analytics.enable
    != partial("includes/third-party/umami_analytics", {}, { cache: true })

  if theme.busuanzi.site_uv || theme.busuanzi.site_pv || theme.busuanzi.page_pv
    script(async data-pjax src= theme.asset.busuanzi || '//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js')

  !=partial('includes/third-party/search/index', {}, {cache: true})

  if theme.ai_summary.enable && is_post()
    link(rel="stylesheet" href="https://ai.tianli0.top/static/public/tianli_gpt.min.css")
    script.
      let tianliGPT_postSelector = '#{theme.ai_summary.postSelector}';
      let tianliGPT_key = '#{theme.ai_summary.key}';
      let tianliGPT_postURL = '#{theme.ai_summary.postURL}';
      let tianliGPT_wordLimit = '#{theme.ai_summary.wordLimit}';
      let tianliGPT_Title = '#{theme.ai_summary.title}';
    //- script(defer type="text/plain" data-type="application/javascript" data-name="tianli-gpt-ai-summary" data-src="https://ai.tianli0.top/static/public/tianli_gpt.min.js")
    script(defer data-name="tianli-gpt-ai-summary" src="https://ai.tianli0.top/static/public/tianli_gpt.min.js")
